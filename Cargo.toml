[package]
name = "rendy_playground"
version = "0.1.0"
authors = ["sim82 <simberger@gmail.com>"]
edition = "2018"
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
vulkan = []

[dependencies]
async-std = {version = "*", features = ["unstable"]}
bincode = "*"
clap = "*"
env_logger = "*"
failure = "0.1"
genmesh = "*"
gfx-backend-vulkan = {version = "0.4", features = ["x11"]}
image = "*"
itertools = "*"
lazy_static = "*"
log = "*"
nalgebra = "*"
ndarray = "*"
num-traits = "*"
# packed_simd = "*"
palette = "*"
rand = "0.6"
random_color = "*"
rayon = "*"
rendy = { version ="0.5", features = ["vulkan"]}
rendy-shader = "0.5"
rendy-texture = { version="0.5", features = ["image"]}
rendy-wsi = "0.5"
rendy-init = { version = "0.5", features = ["winit"]}
rendy-core = { version = "*", features = ["vulkan"]}
serde = "*"
serde_derive = "*"
serde_json = "*"
winit = "0.20.0-alpha4"
simdeez = "*"

[profile.dev]
opt-level = 2      # controls the `--opt-level` the compiler builds with.
                   # 0-1 is good for debugging. 2 is well-optimized. Max is 3.
                   # 's' attempts to reduce size, 'z' reduces size even more.
debug = true       # (u32 or bool) Include debug information (debug symbols).
                   # Equivalent to `-C debuginfo=2` compiler flag.
rpath = false      # controls whether compiler should set loader paths.
                   # If true, passes `-C rpath` flag to the compiler.
lto = false        # Link Time Optimization usually reduces size of binaries
                   # and static libraries. Increases compilation time.
                   # If true, passes `-C lto` flag to the compiler, and if a
                   # string is specified like 'thin' then `-C lto=thin` will
                   # be passed.
debug-assertions = true # controls whether debug assertions are enabled
                   # (e.g., debug_assert!() and arithmetic overflow checks)
codegen-units = 16 # if > 1 enables parallel code generation which improves
                   # compile times, but prevents some optimizations.
                   # Passes `-C codegen-units`.
panic = 'unwind'   # panic strategy (`-C panic=...`), can also be 'abort'
incremental = true # whether or not incremental compilation is enabled
                   # This can be overridden globally with the CARGO_INCREMENTAL
                   # environment variable or `build.incremental` config
                   # variable. Incremental is only used for path sources.
overflow-checks = true # use overflow checks for integer arithmetic.
                   # Passes the `-C overflow-checks=...` flag to the compiler.